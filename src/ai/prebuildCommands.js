import { invokeNLDatomicQueryInterpreter } from "./agents/nl-datomic-query";
import { invokeNLQueryInterpreter } from "./agents/nl-query";
import { invokeSearchAgent } from "./agents/search-agent";
import { languages } from "./languagesSupport";

export const BUILTIN_COMMANDS = [
  { id: 0, name: "Use this custom prompt", category: "", onlyGen: true },
  {
    id: 2,
    name: "Outliner Agent: Apply this custom prompt",
    category: "",
    onlyOutliner: true,
  },
  {
    id: 10,
    name: "Selected blocks as prompt",
    category: "",
    includeUids: true,
    onlyGen: true,
  },
  {
    id: 11,
    name: "Translate to... (<default>)",
    prompt: "translate",
    category: "TRANSLATION",
    target: "new w/o",
    isIncompatibleWith: {
      style: true,
    },
    submenu: [
      1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
      1112, 1113, 1114, 1115, 1116, 1199,
    ],
  },
  {
    id: 1199,
    name: "User defined",
    prompt: "translate",
    category: "TRANSLATATION",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 120,
    name: "Fix spelling & grammar",
    prompt: "correctWording",
    category: "REPHRASING",
    target: "new w/o",
    isIncompatibleWith: {
      style: true,
    },
    submenu: [1200, 1201, 1202],
  },
  {
    id: 1200,
    name: "Fix spelling & grammar + explain",
    prompt: "correctWordingAndExplain",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1201,
    name: "Fix spelling & grammar / suggestions",
    prompt: "correctWordingAndSuggestions",
    category: "REPHRASING",
    withSuggestions: true,
    target: "replace",
    includeUids: true,
    isIncompatibleWith: {
      style: true,
    },
    isSub: true,
  },
  {
    id: 1202,
    name: "Accept corrections/suggestions",
    prompt: "acceptSuggestions",
    category: "REPHRASING",
    withSuggestions: true,
    target: "replace",
    includeUids: true,
    isIncompatibleWith: {
      style: true,
    },
    isSub: true,
  },
  {
    id: 121,
    name: "Rephrase",
    prompt: "rephrase",
    category: "REPHRASING",
    target: "new w/o",
    submenu: [1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217],
  },
  {
    id: 1210,
    name: "Shorter",
    prompt: "shorten",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1211,
    name: "More accessible",
    prompt: "accessible",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1212,
    name: "Clearer and more explicit",
    prompt: "clearer",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1213,
    name: "More formal",
    prompt: "formal",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1214,
    name: "More casual",
    prompt: "casual",
    category: "REPHRASING",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1215,
    name: "More engaging",
    prompt: "enhance",
    category: "REPHRASING",
    keyWords: "enhance, synonym",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1216,
    name: "More engaging with suggestions",
    prompt: "enhanceWithSuggestions",
    category: "REPHRASING",
    keyWords: "enhance, synonym",
    withSuggestions: true,
    target: "replace",
    includeUids: true,
    isSub: true,
  },
  {
    id: 1217,
    name: "Vocabulary suggestions",
    prompt: "vocabularySuggestions",
    category: "REPHRASING",
    keyWords: "enhance, synonym",
    withSuggestions: true,
    target: "replace",
    includeUids: true,
    isIncompatibleWith: {
      style: true,
    },
    isSub: true,
  },
  {
    id: 122,
    name: "Outline to Paragraph",
    prompt: "linearParagraph",
    category: "REPHRASING",
    isIncompatibleWith: {
      specificStyles: ["Atomic"],
    },
    target: "new w/o",
    submenu: [1220],
  },
  {
    id: 1220,
    name: "Paragraph to Outline",
    prompt: "outline",
    category: "REPHRASING",
    isIncompatibleWith: {
      specificStyles: ["No bullet points"],
    },
    target: "new w/o",
    isSub: true,
  },
  {
    id: 123,
    name: "Summarize",
    prompt: "summarize",
    category: "REPHRASING",
    target: "new w/o",
  },
  {
    id: 131,
    name: "Extract key insights",
    prompt: "keyInsights",
    category: "EXTRACTING",
    includeUids: true,
  },
  {
    id: 132,
    name: "Extract actionable items",
    prompt: "keyInsights",
    category: "EXTRACTING",
    isIncompatibleWith: {
      specificStyles: ["Quiz"],
    },
    includeUids: true,
  },
  {
    id: 133,
    name: "Extract highlighted texts",
    prompt: "extractHighlights",
    category: "EXTRACTING",
    target: "new w/o",
    includeUids: true,
  },

  // CONTENT CREATION
  {
    id: 140,
    name: "Complete sentence",
    prompt: "sentenceCompletion",
    category: "CREATION",
    target: "append",
    isIncompatibleWith: {
      specificStyles: ["Atomic", "Quiz"],
    },
    submenu: [1400],
  },
  {
    id: 1400,
    name: "Complete paragraph",
    prompt: "paragraphCompletion",
    category: "CREATION",
    target: "append",
    isIncompatibleWith: {
      specificStyles: ["Atomic", "Quiz"],
    },
    isSub: true,
  },
  {
    id: 141,
    name: "Another similar content",
    prompt: "similarContent",
    category: "CREATION",
    keyWords: "extend, variant, clone",
    isIncompatibleWith: {
      style: true,
    },
    target: "new w/o",
  },

  // CRITICAL REASONING TOOLKIT
  {
    id: 151,
    name: "Argument",
    prompt: "argument",
    category: "CRITICAL REASONING TOOLKIT",
    submenu: [1511, 1512, 1513],
  },
  {
    id: 1511,
    name: "Consolidate or base on evidence",
    prompt: "consolidate",
    category: "CRITICAL REASONING TOOLKIT",
    keyWords: "argument",
    isSub: true,
  },
  {
    id: 1512,
    name: "Objection, counterargument",
    prompt: "objection",
    category: "CRITICAL REASONING TOOLKIT",
    isSub: true,
  },
  {
    id: 1513,
    name: "Counterexample",
    prompt: "counterExample",
    category: "CRITICAL REASONING TOOLKIT",
    isSub: true,
  },
  {
    id: 154,
    name: "Explanation",
    prompt: "explanation",
    category: "CRITICAL REASONING TOOLKIT",
    submenu: [1540, 1541, 1542, 1543],
  },
  {
    id: 1540,
    name: "Definition, meaning",
    prompt: "meaning",
    category: "CRITICAL REASONING TOOLKIT",
    keyWords: "explanation",
    target: "new w/o",
    isSub: true,
  },
  {
    id: 1541,
    name: "Example",
    prompt: "example",
    category: "CRITICAL REASONING TOOLKIT",
    isSub: true,
  },
  {
    id: 1542,
    name: "Causal explanation",
    prompt: "causalExplanation",
    category: "CRITICAL REASONING TOOLKIT",
    isSub: true,
  },
  {
    id: 1543,
    name: "Explanation by analogy",
    prompt: "analogicalExplanation",
    category: "CRITICAL REASONING TOOLKIT",
    isSub: true,
  },
  {
    id: 156,
    name: "Challenge my ideas!",
    prompt: "challengeMyIdeas",
    category: "CRITICAL REASONING TOOLKIT",
    submenu: [1561],
    includeUids: true,
  },
  {
    id: 1561,
    name: "Raise questions",
    prompt: "raiseQuestions",
    category: "CRITICAL REASONING TOOLKIT",
    includeUids: true,
    isSub: true,
  },
  // AGENTS,

  {
    id: 80,
    name: "Natural language query",
    callback: invokeNLQueryInterpreter,
    category: "SEARCH & QUERY",
  },
  {
    id: 81,
    name: "Natural language :q Datomic query",
    callback: invokeNLDatomicQueryInterpreter,
    category: "SEARCH & QUERY",
  },
  {
    id: 82,
    name: "Natural language search Agent",
    callback: invokeSearchAgent,
    category: "SEARCH & QUERY",
  },

  // OUTLINER AGENT COMMANDS
  {
    id: 20,
    icon: "properties",
    name: "Outliner Agent: Set as active outline",
    prompt: "",
    category: "",
    onlyOutliner: true,
  },
  {
    id: 21,
    icon: "properties",
    name: "Outliner Agent: Apply selected blocks as prompt",
    prompt: "",
    category: "",
    onlyOutliner: true,
  },
].concat(
  languages.map((lgg, index) => {
    return {
      id: 1100 + index,
      name: lgg[0],
      label: lgg[1],
      prompt: "translate",
      category: "TRANSLATION",
      target: "new w/o",
      isIncompatibleWith: {
        style: true,
      },
      isSub: true,
    };
  })
);
